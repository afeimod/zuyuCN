# SPDX-FileCopyrightText: 2022 yuzu Emulator Project
# SPDX-License-Identifier: GPL-3.0-or-later

name: 'yuzu-android-build'

on:
  push:
    tags: [ "*" ]
  workflow_dispatch: # 添加手动触发选项
 
jobs:
  android:
    runs-on: ubuntu-latest
    # 移除或修改条件检查，或者添加更详细的日志输出
    if: ${{ github.repository == 'yuzu-emu/yuzu-android' || github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Debug info
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.ccache
          key: ${{ runner.os }}-android-${{ hashFiles('**/build.gradle.kts') }}-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-
      - name: Query tag name
        uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache apksigner glslang-dev glslang-tools
      - name: Setup ccache
        run: |
          ccache --set-config=max_size=2.0G
      - name: Build
        run: ./.ci/scripts/android/build.sh
        env:
          ANDROID_KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_B64 }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEYSTORE_PASS: ${{ secrets.ANDROID_KEYSTORE_PASS }}
      - name: Copy artifacts
        run: ./.ci/scripts/android/upload.sh
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: android
          path: artifacts/
  # release steps
  release-android:
    runs-on: ubuntu-latest
    needs: [android]
    # 简化条件，避免作业被跳过
    if: ${{ needs.android.result == 'success' && (startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch') }}
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
      - name: Query tag name
        uses: olegtarasov/get-tag@v2.1.2
        id: tagName
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Create release
        uses: actions/create-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagName.outputs.tag }}
          release_name: ${{ steps.tagName.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload artifacts
        uses: alexellis/upload-assets@0.2.3
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./**/*.apk","./**/*.aab"]'
